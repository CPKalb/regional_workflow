#
#-----------------------------------------------------------------------
#
# This file defines a function that sets the names of parameters needed
# when performing MET/METplus-based verification (MET = Model Evaluation
# Tools).  How these parameters are set depends on the field being 
# verified.
#
#-----------------------------------------------------------------------
#
function set_MET_vx_params() {
#
#-----------------------------------------------------------------------
#
# Save current shell options (in a global array).  Then set new options
# for this script/function.
#
#-----------------------------------------------------------------------
#
  { save_shell_opts; set -u +x; } > /dev/null 2>&1
#
#-----------------------------------------------------------------------
#
# Get the full path to the file in which this script/function is located
# (scrfunc_fp), the name of that file (scrfunc_fn), and the directory in
# which the file is located (scrfunc_dir).
#
#-----------------------------------------------------------------------
#
  local scrfunc_fp=$( $READLINK -f "${BASH_SOURCE[0]}" )
  local scrfunc_fn=$( basename "${scrfunc_fp}" )
  local scrfunc_dir=$( dirname "${scrfunc_fp}" )
#
#-----------------------------------------------------------------------
#
# Get the name of this function.
#
#-----------------------------------------------------------------------
#
  local func_name="${FUNCNAME[0]}"
#
#-----------------------------------------------------------------------
#
# Specify the set of valid argument names for this script/function.  Then
# process the arguments provided to this script/function (which should
# consist of a set of name-value pairs of the form arg1="value1", etc).
#
#-----------------------------------------------------------------------
#
  local valid_args=( \
        "field" \
        "accum" \
        "outvarname_fieldname_in_MET_output" \
        "outvarname_fieldname_in_MET_filedir_names" \
        )
  process_args valid_args "$@"
#
#-----------------------------------------------------------------------
#
# For debugging purposes, print out values of arguments passed to this
# script.  Note that these will be printed out only if VERBOSE is set to
# TRUE.
#
#-----------------------------------------------------------------------
#
  print_input_args valid_args
#
#-----------------------------------------------------------------------
#
# Declare local variables.
#
#-----------------------------------------------------------------------
#
  local fieldname_in_MET_output \
        fieldname_in_MET_filedir_names
#
#-----------------------------------------------------------------------
#
# Set the parameters.  Definitions:
#
# fieldname_in_MET_output:
# Name that will be used for arrays defined in files (e.g. NetCDF) created
# by MET that contain the specified field.
#
# fieldname_in_MET_filedir_names:
# Name that will be used in names of directories and files (e.g. NetCDF
# files, stat files, log files, staging directories) generated by MET
# or METplus.
#
#-----------------------------------------------------------------------
#
  fieldname_in_MET_output=""
  fieldname_in_MET_filedir_names=""

  case "${field}" in

    "APCP")
      fieldname_in_MET_output="${field}_${accum}"
      fieldname_in_MET_filedir_names="${field}${accum}h"
      ;;

    "REFC" | "RETOP")
      fieldname_in_MET_output="${field}"
      fieldname_in_MET_filedir_names="${field}"
      ;;

    *)
      print_err_msg_exit "\
A method for setting MET/METplus parameters has not been specified for
this field:
  field = \"${field}\""
      ;;

  esac
#
#-----------------------------------------------------------------------
#
# Set output variables.
#
#-----------------------------------------------------------------------
#
  if [ ! -z "${outvarname_fieldname_in_MET_output}" ]; then
    printf -v ${outvarname_fieldname_in_MET_output} "%s" "${fieldname_in_MET_output}"
  fi

  if [ ! -z "${outvarname_fieldname_in_MET_filedir_names}" ]; then
    printf -v ${outvarname_fieldname_in_MET_filedir_names} "%s" "${fieldname_in_MET_filedir_names}"
  fi
#
#-----------------------------------------------------------------------
#
# Restore the shell options saved at the beginning of this script/function.
#
#-----------------------------------------------------------------------
#
  { restore_shell_opts; } > /dev/null 2>&1

}
